// <auto-generated />
using System;
using BankApplication.Infraestrutura;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BankApplication.Infraestrutura.Migrations
{
    [DbContext(typeof(BankContext))]
    partial class BankContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BankApplication.Infraestrutura.Entities.Associado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Genero");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Associado");
                });

            modelBuilder.Entity("BankApplication.Infraestrutura.Entities.Associado", b =>
                {
                    b.OwnsOne("BankApplication.Domain.Associados.ValueObjects.DadosPessoais", "DadosPessoais", b1 =>
                        {
                            b1.Property<Guid>("AssociadoId");

                            b1.Property<string>("CPF");

                            b1.Property<int>("Idade");

                            b1.Property<string>("Profissao");

                            b1.Property<decimal>("Salario");

                            b1.HasKey("AssociadoId");

                            b1.ToTable("Associado");

                            b1.HasOne("BankApplication.Infraestrutura.Entities.Associado")
                                .WithOne("DadosPessoais")
                                .HasForeignKey("BankApplication.Domain.Associados.ValueObjects.DadosPessoais", "AssociadoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("BankApplication.Domain.Associados.ValueObjects.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("AssociadoId");

                            b1.Property<string>("Complemento");

                            b1.Property<string>("Logradouro");

                            b1.Property<int>("Numero");

                            b1.HasKey("AssociadoId");

                            b1.ToTable("Associado");

                            b1.HasOne("BankApplication.Infraestrutura.Entities.Associado")
                                .WithOne("Endereco")
                                .HasForeignKey("BankApplication.Domain.Associados.ValueObjects.Endereco", "AssociadoId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
